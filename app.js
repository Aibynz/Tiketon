document.addEventListener("DOMContentLoaded", async () => {
  const tg = window.Telegram.WebApp;
  tg.expand();

  const dateSelect = document.getElementById("dateSelect");
  const timeSelect = document.getElementById("timeSelect");
  const confirmBtn = document.getElementById("confirmBtn");
  const seatTable = document.getElementById("seatTable");

  let selectedEvent = null;
  let selectedSeats = [];

  // üé≠ –Ü—Å-—à–∞—Ä–∞ —Ç–∞“£–¥–∞—É
  document.querySelectorAll(".event-button").forEach((btn) => {
    btn.addEventListener("click", () => {
      selectedEvent = {
        title: btn.dataset.title,
        place: btn.dataset.place
      };

      // –¢–∞“£–¥–∞–ª“ì–∞–Ω –±–∞—Ç—ã—Ä–º–∞ –∫”©—Ä–Ω–µ–∫—ñ –±–æ–ª—É “Ø—à—ñ–Ω
      document.querySelectorAll(".event-button").forEach(b => b.classList.remove("active"));
      btn.classList.add("active");
    });
  });

  // üî¥ –ë—Ä–æ–Ω—å–¥–∞–ª“ì–∞–Ω –æ—Ä—ã–Ω–¥–∞—Ä–¥—ã –∞–ª—É
  async function fetchBookedSeats() {
    try {
      const res = await fetch("http://localhost:8000/booked-seats"); // ‚ö†Ô∏è –ú—ã–Ω–∞—É —Å–µ—Ä–≤–µ—Ä –∞–¥—Ä–µ—Å
      const data = await res.json();

      const currentDate = dateSelect.value;
      const currentTime = timeSelect.value;

      const allBookedSeats = data
        .filter(b =>
          b.event === selectedEvent?.title &&
          b.date === currentDate &&
          b.time === currentTime &&
          (b.status === "–û–ø–ª–∞—á–µ–Ω–æ" || b.status === "‚ùå –£–∞“õ—ã—Ç ”©—Ç—Ç—ñ")
        )
        .flatMap(b => b.seats);

      document.querySelectorAll(".seat").forEach(btn => {
        const seat = btn.dataset.seat;
        if (allBookedSeats.includes(seat)) {
          btn.disabled = true;
          btn.classList.add("booked");
        }
      });
    } catch (err) {
      console.error("‚ö†Ô∏è fetchBookedSeats error:", err);
    }
  }

  // üí∫ –û—Ä—ã–Ω —Ç–∞“£–¥–∞—É—ã
  seatTable.addEventListener("click", (e) => {
    if (e.target.classList.contains("seat") && !e.target.disabled) {
      const seat = e.target.dataset.seat;
      if (selectedSeats.includes(seat)) {
        selectedSeats = selectedSeats.filter(s => s !== seat);
        e.target.classList.remove("selected");
      } else {
        selectedSeats.push(seat);
        e.target.classList.add("selected");
      }
    }
  });

  // üì© –ë—Ä–æ–Ω–¥–∞—É –±–∞—Ç—ã—Ä–º–∞—Å—ã
  confirmBtn.addEventListener("click", () => {
    const selectedDate = dateSelect.value;
    const selectedTime = timeSelect.value;

    if (!selectedEvent || selectedSeats.length === 0) {
      alert("–Ü—Å-—à–∞—Ä–∞ –º–µ–Ω –æ—Ä—ã–Ω —Ç–∞“£–¥–∞“£—ã–∑!");
      return;
    }

    const data = {
      event: selectedEvent,
      seats: selectedSeats,
      date: selectedDate,
      time: selectedTime
    };

    console.log("‚û°Ô∏è –ñ—ñ–±–µ—Ä—ñ–ª—É–¥–µ:", data);
    try {
      tg.sendData(JSON.stringify(data));
    } catch (e) {
      alert("“ö–∞—Ç–µ: " + e.message);
    }
  });
});
